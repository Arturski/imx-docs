---
id: 'asset-metadata-refreshes'
title: 'Asset Metadata Refreshes'
slug: '/asset-metadata-refreshes'
sidebar_position: 3
keywords:
  - imx-games
---

# 자산 메타데이터 새로 고침

메타데이터 새로 고침은 오프체인 자산 메타데이터를 업데이트합니다.

[자산 메타데이터에 관해 더 읽어 보십시오.](/docs/asset-metadata)

## 사용 사례

메타데이터 새로 고침은 게임을 지원합니다.

- 캐릭터의 레벨 업, 만들기, 합성하기 등과 같이 메타데이터에 의존하는 게임 플레이 메카닉을 지원
- 게임 밸런스 개선
- 삽화와 광고 문안 등의 게임 콘텐츠 개선 및 정정
- 일차 판매량의 공개 지연
- 메타데이터를 통한 검색 용이성 향상

## 요구 사항

새로 고침에 성공하려면 먼저 다음을 충족해야 합니다.

- 자산 메타데이터의 저장소(source of truth)인 [메타데이타 API](/docs/minting-on-immutable-x#metadata-api)를 생성 및 배치해야 합니다
- 공개의 경우, 자산을 공개할 준비가 되었을 때만 메타데이터 API를 업데이트하십시오. 공개 절차는 대략 다음과 같습니다.
  - 자산을 민팅합니다
  - 공개할 준비가 되었으면 공개할 속성과 함께 메타데이터 API를 업데이트합니다
  - 자산이 공개되도록 메타데이터를 새로 고침합니다
- 메타데이터 API의 가용성이 요구 사항에 맞는지 확인하십시오. 메타데이터 새로 고침 서비스는 사용자의 메타데이터 API에서 각 자산에 대한 메타데이터를 동시에 요청하며, 해당 자산의 메타데이터를 성공적으로 업데이트하기 위해 3초 미만의 응답 시간을 요구합니다. 메타데이터 API로의 요청이 실패하면, 그 특정 자산이 [실패로 표시](#viewing-metadata-refresh-errors)되기 전에 한 번 더 요청을 재시도합니다.

## API

메타데이터 새로 고침과 관련 있는 엔드 포인트는 url 리소스 `/metadata-refreshes`를 통해 표시됩니다.

새로 고침을 완료하는 데 예상되는 최대 시간(추정)은 약 48시간입니다. 해당 자산의 새로 고침이 일단 완료되면 업데이트된 메타데이터 값은 마켓플레이스 등 하류 시스템에서만 반영됩니다.

### 인증

메타데이터 새로 고침 엔드 포인트들은 인증을 통해 보호됩니다. 해당 프로젝트의 소유자만이 이러한 엔드 포인트들을 호출할 수 있습니다.

다음은 프로젝트 소유자 인증에 필요한 헤더입니다.

- `x-imx-eth-address` - 요청을 넣는 프로젝트 소유자의 이더리움 주소
- `x-imx-eth-signature` - the signature generated by the project owner
- `x-imx-eth-timestamp` - the timestamp used to generate the signature

[프로젝트 소유자 인증 헤더 생성 방법 보기.](/docs/generate-imx-signature/)

### 메타데이터 새로 고침 요청하기

메타데이터 새로 고침은 호출을 통해 요청할 수 있습니다.

```json
POST /v1/metadata-refreshes
```

and specifying the collection address and IDs of the tokens requiring a refresh:

```json
{
  "collection_address": "0x9a48b1b27743d807331d06ecf0bfb15c06fdb58d", // 필수
  "token_ids": ["1", "2"] // 필수
}
```

사용자는 HTTP 상태 코드 **202 Accepted**와 함께 다음의 응답을 받게 됩니다.

```json
{
  "refresh_id": "21566bcb-4263-48bb-a495-602ba9a12f2c"
}
```

`refresh_id`는 영수증의 역할을 하며, 새로 고침이 개시되었으며 처리될 것이라는 사실을 확인해 줍니다. 특정 새로 고침의 상태를 쿼리하는 데 사용할 수 있습니다.

프로젝트는 특정 시간 또는 시스템의 특정 이벤트에 기반해 새로 고침 엔드 포인트를 프로그램적으로 호출할 수 있습니다. 현재 한 번 요청된 새로 고침을 취소할 수 있는 방법은 없습니다.

[메타데이터 새로 고침 요청용 OpenAPI 사양 보기.](/reference#/operations/Request%20a%20metadata%20refresh)

### 메타데이터 새로 고침 상태 보기

새로 고침의 상태는 다음의 엔드 포인트로 `refresh_id`를 사용하여 쿼리할 수 있습니다.

```json
GET /v1/metadata-refreshes/:refresh_id
```

그러면 다음의 응답이 반환됩니다.

```json
{
  "refresh_id": "21566bcb-4263-48bb-a495-602ba9a12f2c",
  "status": "completed",
  "collection_address": "0x9a48b1b27743d807331d06ecf0bfb15c06fdb58d",
  "started_at": "2022-08-31T01:59:59.806449Z",
  "completed_at": "2022-08-31T02:00:09.786143Z",
  "summary": {
    "succeeded": 2,
    "failed": 0,
    "pending": 0
  }
}
```

#### 상태

새로 고침의 상태 필드는 다음과 같은 값을 가질 수 있습니다.

- `queued` - 새로 고침이 요청되었으나 어떤 토큰도 처리되지 않음
- `in_progress` - 새로 고침이 처리를 시작했고 최소 1개의 토큰이 처리됨
- `completed` - 모든 토큰이 처리됨

#### 요약

새로 고침의 요약 필드는 해당 새로 고침에 속한 개별 토큰 상태의 수를 표시합니다.

- `succeeded` - 이 토큰의 메타데이터가 성공적으로 업데이트됨
- `failed` - 이 토큰의 메타데이터를 업데이트할 수 없었음
- `pending` - 토큰이 처리되지 않음

[특정 토큰의 메타데이터를 업데이트할 수 없는 이유를 조사하기 위해](#viewing-metadata-refresh-errors) 다른 엔드 포인트를 사용할 수 있습니다.

[메타데이터 새로 고침 상태용 OpenAPI 사양 보기.](/reference#/operations/Get%20metadata%20refresh%20results)

### 메타데이터 새로 고침 오류 보기

[메타데이터 API](/docs/minting-on-immutable-x#metadata-api)에서 업데이트된 메타데이터의 검색에 두 번 실패하는 경우, 그 토큰은 `failed`로 표시됩니다. 특정 새로 고침에서 토큰 메타데이터가 업데이트되지 않는 이유에 관한 더 자세한 설명은 다음 엔드 포인트로 쿼리할 수 있습니다.

```json
GET /v1/metadata-refreshes/:refresh_id/errors
```

그러면 업데이트할 수 없는 해당 새로 고침 내에 있는 토큰의 번호를 매긴 목록과 그 개별 오류 세부 내역이 반환됩니다.

```json
{
  "result": [
    {
      "token_id": "1",
      "collection_address": "0x9a48b1b27743d807331d06ecf0bfb15c06fdb58d",
      "client_token_metadata_url": "https://metadata-api.io/1",
      "client_response_status_code": 404,
      "client_response_body": "404 page not found\n",
      "error_code": "invalid_response_status_code",
      "created_at": "2022-09-06T02:14:04.935946Z"
    }
  ],
  "cursor": "eyJjcmVhdGVkX2F0IjoiMjAyMi0wOS0wNlQwMjoxNDowNC45MzU5NDZaIiwiaWQiOiIyYzU2ZDE5Ni1mY2ViLTQ1MzItYmMzOC0zZmZlMTFlOTM4Y2UifQ",
  "remaining": 0
}
```

결과 배열의 각 항목은 그 특정 새로 고침에서 실패한 하나의 토큰을 나타냅니다.

- `client_token_metadata_url` - 메타데이터 API 요청을 실행하기 위해 사용된 url
- `client_response_status_code` - 메타데이터 API에서 받은 응답 상태 코드
- `client_response_body` - 메타데이터 APU가 응답 바디로 제공한 모든 오류의 세부 내역
- `error_code` - 메타데이터가 업데이트될 수 없었던 이유를 설명

#### 오류 코드

<table>
  <thead>
  <tr>
    <th>
      오류 코드
    </th>
    <th>
      설명
    </th>
  </tr>
  </thead>
  <tbody>
  <tr>
    <td>
      <code>unable_to_retrieve_metadata</code>
    </td>
    <td>
      메타데이터 새로 고침 서비스가 메타데이터 API에서 응답을 받을 수 없었음, 예: API 시간 초과
    </td>
  </tr>
  <tr>
    <td>
      <code>invalid_response_status_code</code>
    </td>
    <td>
      메타데이터 새로 고침 서비스가 메타데이터 API에 요청했을 때 비 200 응답 코드를 받음
    </td>
  </tr>
  <tr>
    <td>
      <code>unable_to_decode_response</code>
    </td>
    <td>
      메타데이터 API에서 받은 응답을 디코딩할 수 없었음
    </td>
  </tr>
  <tr>
    <td>
      <code>token_not_found</code>
    </td>
    <td>
      시스템 내에 토큰이 존재하지 않음
    </td>
  </tr>
  </tbody>
</table>

[메타데이터 새로 고침 오류용 OpenAPI 사양 보기.](/reference#/operations/Get%20metadata%20refresh%20errors)

### 모든 메타데이터 새로 고침 목록 얻기

사용자는 모든 메타데이터 새로 고침 목록을 불러와 `refresh_id`를 찾을 수 있으며, 그 후 특정 새로 고침의 상태 쿼리에 이를 사용할 수 있습니다.

```json
GET /v1/metadata-refreshes
```

상기 엔드 포인트는 `created_at`가 주문한 새로 고침 목록을 반환하며, 가장 최근 새로 고침을 우선으로 보여 줍니다.

##### 컬렉션 주소로 필터링하기

엔드 포인트 결과는 쿼리 매개 변수 `collection_address`를 사용해 필터링할 수도 있습니다.

```json
GET /v1/metadata-refreshes?collection_address=COLLECTION_ADDRESS
```

응답은 새로 고침에 번호를 매긴 목록을 반환합니다.

```json
{
  "result": [
    {
      "refresh_id": "ff52e750-2cc6-4455-b1ae-95a4280e4826",
      "status": "completed",
      "collection_address": "0x9a48b1b27743d807331d06ecf0bfb15c06fdb58d",
      "started_at": "2022-09-06T02:11:03.065286Z",
      "completed_at": "2022-09-06T02:14:04.945285Z"
    }
  ],
  "cursor": "eyJjcmVhdGVkX2F0IjoiMjAyMi0wOC0zMFQwNzozODoxMS4xMzczMTRaIiwiaWQiOiI2YzhlMDNjNS04ZWYxLTQzNmQtOWNjZS1iM2ExNDdmYzc3NGIifQ",
  "remaining": 0
}
```

[메타데이터 새로 고침 목록용 OpenAPI 사양 보기.](/reference#/operations/Get%20a%20list%20of%20metadata%20refreshes)

## 메타데이터 새로 고침 제한

메타데이터 새로 고침 요청의 횟수는 프로젝트별, 시간별로 제한이 존재합니다.

- 하나의 특정 프로젝트에 시간당 **5**번의 메타데이터 새로 고침 요청 가능
- 새로 고침당 최대 **1,000** 토큰 요청 가능

[새로 고침이 요청](#requesting-a-metadata-refresh)될 때마다 또는 새로 고침 제한이 한도에 달할 때마다, 다음의 헤더가 반환됩니다.

- `x-imx-refreshes-limit` - 시간당 요청 가능한 새로 고침 횟수
- `x-imx-remaining-refreshes` - 현재 시간 인터벌에 남은 새로 고침 횟수
- `x-imx-refresh-limit-reset` - 언제 다음 시간 인터벌로 연장되어 제한이 초기화되는지를 알려주는 UNIX 타임스탬프

새로 고침 제한이 한도에 도달하면, 사용자는 ** 428 Too Many Request** HTTP 상태 코드와 함께 다음과 같은 응답을 받게 됩니다.

```json
{
  "code": "refresh_limit_exceeded",
  "message": "Refresh limit exceeded"
}
```

:::info 추가 요청
추가적으로 새로 고침을 요청할 필요가 있는 경우에는 [고객지원팀으로 연락](https://support.immutable.com)하여 주십시오.
:::
