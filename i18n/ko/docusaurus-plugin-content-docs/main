---
id: "account-management"
title: "Account management"
slug: "/account-management"
excerpt: "사용자 지갑 등록"
sidebar_position: 2
keywords:
  - imx-wallets
---

Your web3 wallet (e.g. Metamask) is used to create, connect, and sign transactions on ImmutableX. Using Link SDK calls, we can handle account management activities.

## 애플리케이션 사용자를 위한 보안
If you're integrating your application with ImmutableX, you must use the [Link SDK](../link-sdk/index.md) for registering new users. 이는 사용자의 지갑을 위해 생성된 L2 키가 제대로 만들어져 생태계 전역에서 작동할 수 있게 해줍니다. 키를 제대로 만드는 데 실패하면 키를 토큰의 입금이나 출금에 사용할 수 없게 됩니다.

링크 SDK는 경매에서 사용자의 서명을 요청할 때도 사용되어야 합니다. 링크로 키를 생성하지 않으면 애플리케이션 사용자에게 보안 이슈가 발생할 수 있습니다.

## 애플리케이션 사용자용 지갑 설정하기
애플리케이션 사용자의 계정 설정은 링크 SDK를 사용한 단일 호출입니다. 이 기능은 설정/로그인이 제대로 완료된 경우 애플리케이션 사용자의 계정 정보를 반환합니다.
```javascript
async function setupAccount(){
    const {address, starkPublicKey } = await link.setup({});
    //… save user session data
}
```
호출 시 링크 SDK 팝업창이 나타나 애플리케이션 사용자에게 현재 활성 상태인 지갑 주소를 설정/연결할 것을 안내합니다.

## 애플리케이션 사용자 세션 저장
현재 로그인 중인 사용자의 추적은 다양한 방식으로 이루어질 수 있습니다. 간단한 방법 중 하나는 정보를 로컬 저장소에 저장하는 것입니다.
```javascript
async function setupAccount(){
    const {address, starkPublicKey } = await link.setup({});
    localStorage.setItem('WALLET_ADDRESS', address);
    localStorage.setItem('STARK_PUBLIC_KEY', starkPublicKey);
}
```
정보가 저장되면 애플리케이션이 사용자의 정보에 액세스하여 사용자의 자산을 가져온다거나 사용자가 구매한 오더를 보는 등의 요청을 할 수 있습니다. 사용자 데이터를 웹 세션 사이에 유지하는 것을 고려하고 있다면 로컬 저장소는 좋은 옵션입니다. 향후 요청에서 이미 설정된 사용자의 주소를 검색하는 것은 다음과 같이 간단합니다.
```javascript
const address = localStorage.getItem('WALLET_ADDRESS');
```
## 지갑 연결 해제하기
Tracking the user’s connection to ImmutableX should be performed by checking the user’s session. 사용자의 세션이 더 이상 연결 데이터를 포함하고 있지 않다면 설정 기능은 다시 호출되어야 합니다. 이러한 패턴으로, 사용자의 주소를 세션에서 제거하여 지갑을 연결 해제할 수 있습니다. 로컬 저장소 테크닉을 사용한다면 다음을 사용하십시오.
```javascript
localStorage.removeItem('WALLET_ADDRESS');
```