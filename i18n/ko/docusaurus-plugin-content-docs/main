---
id: "api-rate-limiting"
title: "API rate limiting"
slug: "/api-rate-limiting"
sidebar_position: 9
keywords:
  - imx-core
---

API로의 모든 호출에는 새로 고침 기간당 특정 요청 횟수가 할당됩니다. 제한 속도는 개인인지 프로젝트인지, 대상으로 하는 환경이 무엇인지에 따라 달라집니다. 파트너사의 경우 제한은 프로젝트로 결정됩니다. 그렇지 않은 경우, 제한은 IP 주소당을 기본으로 결정됩니다.

이뮤터블은 지난 분기의 트래픽과 이번 분기의 업데이트 분석을 근거로 제한을 설정합니다. 일단 이 기준치에 도달하면 상태 코드 `429` 응답을 반환합니다.

api-key를 포함하지 않는 API와의 통합(아래의 예시 참조)는 초당, IP 주소당 요청을 5회 이상 초과할 수 없습니다. 이것은 API의 모든 엔드 포인트 전체에 걸쳐 측정됩니다.

## 통합
속도 제한을 높이려면 API에 대한 모든 호출에 사용할 API 키를 확보해야 합니다. 이것은 또한 사용자의 기업 프로젝트를 고유하게 식별하므로 공유해서는 안 됩니다.

아직 등록하지 않았다면 [프로젝트를 이뮤터블에 등록](../guides/onboarding/project-registration.md)하십시오. 그러면 숫자로 된 프로젝트 ID가 발급됩니다. API 키를 확보하려면 [고객 지원팀에 연락해](../resources/contact.mdx) 프로젝트 ID를 알려주십시오. API 키와 함께 더 높은 속도 제한을 부여할 수 있는지 평가할 것입니다.

:::info 속도 제한 높이기
대부분의 애플리케이션에서 높은 속도 제한은 애플리케이션의 사용성을 개선하지 않습니다. 거래나 민팅이 얼마나 자주 발생하는지, 그것이 사용자 경험에 어떻게 영향을 미치는지를 고려하십시오. 데이터 캐싱은 애플리케이션의 돌발적인 높은 트래픽을 관리하고 네트워크 부담을 최소화할 수 있게 도와줍니다. 또한 더 나은 사용자 경험을 만들어 줍니다.
:::

API 키는 http 헤더에 있는 API에 대한 모든 호출에 추가되어야 합니다.
```curl
curl -is 'https://api.x.immutable.com/v1/orders/1337' --header 'x-api-key: xxx'
```

## 모범 사례
다음은 성공적인 통합을 위해 따라야 할 일부 모범 사례입니다.
- **클라이언트 제한** - 예방적으로 나가는 호출 속도를 제한하면 외부적으로 속도가 제한되는 것을 방지할 수 있으며 전반적으로 제한되는 상황을 좀 더 우아하게 처리할 수 있게 해줍니다. 또한 이 로직으로 클라이언트를 구축하면 (프로젝트에 맞게) 총 제한을 더욱 세분화하여 어느 클라이언트도 너무 많은 할당량을 소비하지 않게 됩니다. 예를 들어 총 한도를 국가별, 지역별, 기타 등으로 세분화하는 것을 선택할 수 있습니다.
- **재시도 및 백오프** - 속도 제한에 걸린 경우, 일정 시간을 기다린 후에 요청을 다시 시도하십시오. [지수 백오프](https://en.wikipedia.org/wiki/Exponential_backoff)를 사용해 점진적으로 이 대기 시간을 늘리십시오.
- **폴링 피하기** - API 폴링(특히 응답을 기다리지 않는 '쇼트 폴링')은 안티패턴으로 할당량을 빠르게 소모합니다.